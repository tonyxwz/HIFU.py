0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
         36340019 function calls (35339284 primitive calls) in 22.629 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   909467    0.383    0.000    0.881    0.000 <frozen importlib._bootstrap>:1009(_handle_fromlist)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
      2/1    0.000    0.000    0.008    0.008 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:307(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:311(__enter__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:318(__exit__)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:369(__init__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:403(cached)
   289505    0.131    0.000    0.183    0.000 <frozen importlib._bootstrap>:416(parent)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:424(has_location)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:504(_init_module_attrs)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:576(module_from_spec)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
      2/1    0.000    0.000    0.009    0.009 <frozen importlib._bootstrap>:663(_load_unlocked)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:719(find_spec)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:792(find_spec)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:855(__enter__)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:859(__exit__)
        2    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:882(_find_spec)
      2/1    0.000    0.000    0.009    0.009 <frozen importlib._bootstrap>:948(_find_and_load_unlocked)
      2/1    0.000    0.000    0.009    0.009 <frozen importlib._bootstrap>:978(_find_and_load)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1190(_path_hooks)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1203(_path_importer_cache)
        2    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1240(_get_spec)
        2    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1272(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1319(__init__)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1325(<genexpr>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1351(_get_spec)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1356(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1404(_fill_cache)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1433(<setcomp>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1445(path_hook_for_FileFinder)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:271(cache_from_source)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:36(_relax_case)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:369(_get_cached)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:401(_check_name_wrapper)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:438(_classify_pyc)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:471(_validate_timestamp_pyc)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:51(_r_long)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:523(_compile_bytecode)
       10    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:56(_path_join)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:574(spec_from_file_location)
       10    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:58(<listcomp>)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_split)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:719(create_module)
      2/1    0.000    0.000    0.009    0.009 <frozen importlib._bootstrap_external>:722(exec_module)
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:74(_path_stat)
        2    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:793(get_code)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:84(_path_is_mode_type)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:884(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:909(get_filename)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:914(get_data)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:93(_path_isfile)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:951(path_stats)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:98(_path_isdir)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000   23.092   23.092 <string>:2(<module>)
       13    0.000    0.000    0.000    0.000 <string>:2(__add__)
     3303    0.005    0.000    0.018    0.000 <string>:2(__div__)
     1645    0.002    0.000    0.004    0.000 <string>:2(__eq__)
     1373    0.002    0.000    0.006    0.000 <string>:2(__mul__)
     3821    0.006    0.000    0.020    0.000 <string>:2(__pow__)
       26    0.000    0.000    0.000    0.000 <string>:2(__sub__)
        2    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
     6864    0.003    0.000    0.007    0.000 abc.py:137(__instancecheck__)
      6/3    0.000    0.000    0.000    0.000 abc.py:141(__subclasscheck__)
    10377    0.002    0.000    0.002    0.000 add.py:104(<genexpr>)
    14056    0.008    0.000    0.053    0.000 add.py:17(_addsort)
     1710    0.001    0.000    0.001    0.000 add.py:276(class_key)
     6819    0.011    0.000    0.025    0.000 add.py:341(as_coeff_Add)
      190    0.001    0.000    0.028    0.000 add.py:377(_eval_derivative)
      190    0.000    0.000    0.026    0.000 add.py:379(<listcomp>)
     5510    0.044    0.000    0.278    0.000 add.py:428(as_numer_denom)
     5510    0.005    0.000    0.009    0.000 add.py:450(<listcomp>)
      190    0.000    0.000    0.001    0.000 add.py:476(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:477(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:478(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:479(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:480(<lambda>)
      380    0.000    0.000    0.001    0.000 add.py:481(<genexpr>)
      203    0.000    0.000    0.002    0.000 add.py:482(<lambda>)
      609    0.000    0.000    0.001    0.000 add.py:483(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:484(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:485(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:486(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:487(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:488(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:489(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:490(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:491(<genexpr>)
      190    0.000    0.000    0.001    0.000 add.py:492(<lambda>)
      570    0.000    0.000    0.000    0.000 add.py:493(<genexpr>)
      190    0.001    0.000    0.002    0.000 add.py:495(_eval_is_imaginary)
      190    0.001    0.000    0.182    0.001 add.py:518(_eval_is_zero)
      190    0.000    0.000    0.000    0.000 add.py:554(_eval_is_odd)
      190    0.000    0.000    0.000    0.000 add.py:555(<listcomp>)
      190    0.000    0.000    0.000    0.000 add.py:561(_eval_is_irrational)
      190    0.001    0.000    0.006    0.000 add.py:574(_eval_is_positive)
      190    0.000    0.000    0.000    0.000 add.py:591(<listcomp>)
      190    0.001    0.000    0.003    0.000 add.py:628(_eval_is_nonnegative)
      190    0.000    0.000    0.003    0.000 add.py:643(_eval_is_nonpositive)
      190    0.001    0.000    0.006    0.000 add.py:658(_eval_is_negative)
      190    0.000    0.000    0.000    0.000 add.py:675(<listcomp>)
     2280    0.001    0.000    0.001    0.000 add.py:712(_eval_subs)
     8416    0.072    0.000    0.295    0.000 add.py:75(flatten)
     3990    0.011    0.000    0.082    0.000 add.py:860(__neg__)
     3990    0.005    0.000    0.029    0.000 add.py:861(<listcomp>)
    22990    0.127    0.000    0.582    0.000 add.py:869(primitive)
    22990    0.009    0.000    0.009    0.000 add.py:915(<listcomp>)
    22990    0.007    0.000    0.007    0.000 add.py:916(<listcomp>)
     6840    0.030    0.000    0.405    0.000 add.py:949(as_content_primitive)
     6840    0.017    0.000    0.171    0.000 add.py:969(<listcomp>)
     2280    0.001    0.000    0.003    0.000 add.py:974(<genexpr>)
     5220    0.007    0.000    0.052    0.000 assumptions.py:214(__init__)
     1605    0.001    0.000    0.034    0.000 assumptions.py:225(copy)
      744    0.000    0.000    0.001    0.000 assumptions.py:228(generator)
240055/207860    0.090    0.000    0.729    0.000 assumptions.py:241(getit)
24298/4023    0.088    0.000    0.620    0.000 assumptions.py:253(_ask)
     1900    0.000    0.000    0.000    0.000 basic.py:1033(_eval_subs)
    28215    0.013    0.000    0.152    0.000 basic.py:1041(xreplace)
1190549/1147640    0.240    0.000    0.327    0.000 basic.py:106(__hash__)
40574/28215    0.044    0.000    0.139    0.000 basic.py:1104(_xreplace)
    23373    0.013    0.000    0.582    0.000 basic.py:1125(has)
    52007    0.008    0.000    0.008    0.000 basic.py:115(_hashable_content)
    54348    0.018    0.000    0.558    0.000 basic.py:1172(<genexpr>)
    30975    0.082    0.000    0.540    0.000 basic.py:1174(_has)
   152060    0.058    0.000    0.331    0.000 basic.py:1183(<genexpr>)
     4182    0.002    0.000    0.033    0.000 basic.py:1188(<genexpr>)
      951    0.000    0.000    0.000    0.000 basic.py:1192(_has_matcher)
     5130    0.083    0.000    1.535    0.000 basic.py:1196(replace)
    20140    0.005    0.000    0.013    0.000 basic.py:1331(<lambda>)
    21090    0.010    0.000    0.024    0.000 basic.py:1390(rec_replace)
7480/4577    0.027    0.000    0.063    0.000 basic.py:155(compare)
    30296    0.168    0.000    0.292    0.000 basic.py:1647(_exec_constructor_postprocessors)
    59325    0.039    0.000    0.039    0.000 basic.py:1666(<genexpr>)
      570    0.000    0.000    0.001    0.000 basic.py:1702(xreplace)
     2280    0.001    0.000    0.001    0.000 basic.py:1708(class_key)
     1805    0.000    0.000    0.000    0.000 basic.py:1716(_eval_simplify)
    34598    0.154    0.000    0.542    0.000 basic.py:1729(_aresame)
   116701    0.055    0.000    0.055    0.000 basic.py:1850(__init__)
709371/377529    0.265    0.000    0.342    0.000 basic.py:1854(_preorder_traversal)
   333082    0.078    0.000    0.483    0.000 basic.py:1900(__next__)
   116701    0.011    0.000    0.011    0.000 basic.py:1903(__iter__)
216317/215125    0.535    0.000    1.481    0.000 basic.py:282(__eq__)
    55767    0.021    0.000    0.258    0.000 basic.py:334(__ne__)
     6555    0.012    0.000    0.105    0.000 basic.py:401(__str__)
    12350    0.046    0.000    0.171    0.000 basic.py:405(atoms)
    12350    0.006    0.000    0.007    0.000 basic.py:479(<listcomp>)
8317/2755    0.010    0.000    0.018    0.000 basic.py:488(free_symbols)
8317/2755    0.004    0.000    0.013    0.000 basic.py:501(<listcomp>)
      285    0.001    0.000    0.005    0.000 basic.py:573(is_comparable)
      285    0.000    0.000    0.000    0.000 basic.py:606(<listcomp>)
   183143    0.029    0.000    0.029    0.000 basic.py:619(func)
   984044    0.122    0.000    0.122    0.000 basic.py:645(args)
     2185    0.035    0.000    1.476    0.001 basic.py:723(subs)
   103247    0.081    0.000    0.109    0.000 basic.py:81(__new__)
      950    0.000    0.000    0.000    0.000 basic.py:879(<genexpr>)
      665    0.000    0.000    0.000    0.000 basic.py:894(<listcomp>)
16919/2185    0.024    0.000    1.163    0.001 basic.py:921(_subs)
8602/1900    0.080    0.000    1.117    0.001 basic.py:993(fallback)
     4181    0.001    0.000    0.001    0.000 boolalg.py:195(__nonzero__)
     6526    0.002    0.000    0.002    0.000 boolalg.py:200(__hash__)
     6504    0.001    0.000    0.001    0.000 boolalg.py:249(__nonzero__)
      570    0.000    0.000    0.000    0.000 boolalg.py:254(__hash__)
    10082    0.003    0.000    0.003    0.000 boolalg.py:280(<lambda>)
      190    0.001    0.000    0.014    0.000 boolalg.py:36(__invert__)
      190    0.001    0.000    0.025    0.000 boolalg.py:419(_new_args_filter)
      190    0.000    0.000    0.000    0.000 boolalg.py:432(<genexpr>)
      190    0.001    0.000    0.011    0.000 boolalg.py:508(eval)
    37164    0.034    0.000    0.058    0.000 compatibility.py:198(iterable)
    17100    0.007    0.000    0.017    0.000 compatibility.py:256(is_sequence)
   293374    0.071    0.000    0.096    0.000 compatibility.py:307(as_int)
7695/3135    0.053    0.000    0.364    0.000 compatibility.py:340(default_sort_key)
      285    0.000    0.000    0.008    0.000 compatibility.py:475(<listcomp>)
    21342    0.039    0.000    0.111    0.000 compatibility.py:521(ordered)
     1727    0.002    0.000    0.008    0.000 complexes.py:147(eval)
      950    0.003    0.000    0.153    0.000 complexes.py:51(eval)
     4940    0.016    0.000    0.029    0.000 constructor.py:13(_construct_simple)
     4940    0.020    0.000    0.069    0.000 constructor.py:220(construct_domain)
     1330    0.001    0.000    0.003    0.000 containers.py:102(__hash__)
      950    0.001    0.000    0.005    0.000 containers.py:143(<lambda>)
    12550    0.021    0.000    0.097    0.000 containers.py:46(__new__)
    39170    0.014    0.000    0.063    0.000 containers.py:48(<genexpr>)
     4940    0.014    0.000    0.046    0.000 containers.py:52(__getitem__)
    12350    0.003    0.000    0.004    0.000 containers.py:55(<genexpr>)
    23180    0.009    0.000    0.014    0.000 containers.py:58(__len__)
    11980    0.005    0.000    0.008    0.000 containers.py:64(__iter__)
     2470    0.003    0.000    0.019    0.000 containers.py:67(__add__)
     7480    0.005    0.000    0.013    0.000 core.py:101(__gt__)
        1    0.000    0.000    0.000    0.000 core.py:58(__setattr__)
    14960    0.008    0.000    0.012    0.000 core.py:73(__cmp__)
     7480    0.003    0.000    0.007    0.000 core.py:96(__lt__)
      190    0.000    0.000    0.000    0.000 cp1252.py:18(encode)
     3800    0.022    0.000    1.499    0.000 cse_opts.py:12(sub_pre)
     3800    0.002    0.000    0.773    0.000 cse_opts.py:15(<listcomp>)
     3800    0.001    0.000    0.001    0.000 cse_opts.py:20(<genexpr>)
     3800    0.013    0.000    0.049    0.000 cse_opts.py:32(sub_post)
    24571    0.007    0.000    0.022    0.000 ctx_mp.py:182(to_fixed)
      285    0.000    0.000    0.000    0.000 ctx_mp_python.py:141(__int__)
     6580    0.005    0.000    0.010    0.000 ctx_mp_python.py:149(__abs__)
     6852    0.007    0.000    0.028    0.000 ctx_mp_python.py:167(_cmp)
     3575    0.001    0.000    0.009    0.000 ctx_mp_python.py:177(__lt__)
     3277    0.002    0.000    0.022    0.000 ctx_mp_python.py:178(__gt__)
      272    0.000    0.000    0.001    0.000 ctx_mp_python.py:182(__ne__)
       13    0.000    0.000    0.000    0.000 ctx_mp_python.py:188(__rsub__)
    24571    0.008    0.000    0.016    0.000 ctx_mp_python.py:228(to_fixed)
    19688    0.018    0.000    0.033    0.000 ctx_mp_python.py:47(__new__)
     9365    0.003    0.000    0.005    0.000 ctx_mp_python.py:595(make_mpf)
      570    0.001    0.000    0.002    0.000 ctx_mp_python.py:614(_set_dps)
     6826    0.001    0.000    0.001    0.000 ctx_mp_python.py:618(<lambda>)
      285    0.000    0.000    0.000    0.000 ctx_mp_python.py:619(<lambda>)
     9598    0.006    0.000    0.008    0.000 ctx_mp_python.py:621(convert)
      570    0.000    0.000    0.003    0.000 ctx_mp_python.py:80(mpf_convert_arg)
     3562    0.002    0.000    0.012    0.000 ctx_mp_python.py:98(mpf_convert_rhs)
     6308    0.010    0.000    0.076    0.000 ctx_mp_python.py:982(f)
141663/139850    0.115    0.000    1.769    0.000 decorators.py:122(binary_op_wrapper)
285027/181251    0.198    0.000    2.530    0.000 decorators.py:84(__sympifyit_wrapper)
     9880    0.016    0.000    0.016    0.000 densebasic.py:1022(dup_to_dict)
     9880    0.005    0.000    0.021    0.000 densebasic.py:1074(dmp_to_dict)
     9880    0.003    0.000    0.004    0.000 densebasic.py:137(dup_degree)
     9880    0.002    0.000    0.002    0.000 densebasic.py:14(poly_LC)
     9880    0.002    0.000    0.002    0.000 densebasic.py:255(dup_strip)
     4940    0.002    0.000    0.002    0.000 densebasic.py:455(dmp_to_tuple)
     9880    0.004    0.000    0.005    0.000 densebasic.py:61(dmp_ground_LC)
     9880    0.027    0.000    0.039    0.000 densebasic.py:920(dup_from_dict)
     9880    0.004    0.000    0.043    0.000 densebasic.py:978(dmp_from_dict)
     9880    0.024    0.000    0.049    0.000 densetools.py:576(dup_content)
     4940    0.006    0.000    0.057    0.000 densetools.py:732(dup_extract)
    12540    0.005    0.000    0.015    0.000 domain.py:106(convert)
    12540    0.007    0.000    0.010    0.000 domain.py:160(of_type)
     4940    0.003    0.000    0.009    0.000 domain.py:238(unify_with_symbols)
9880/4940    0.007    0.000    0.014    0.000 domain.py:244(unify)
    29640    0.011    0.000    0.013    0.000 domain.py:340(__eq__)
    19760    0.003    0.000    0.003    0.000 domain.py:411(is_one)
     9880    0.001    0.000    0.001    0.000 domain.py:419(is_negative)
     4940    0.003    0.000    0.004    0.000 domain.py:72(__hash__)
    12540    0.002    0.000    0.002    0.000 domain.py:78(tp)
      190    0.000    0.000    0.000    0.000 entity.py:105(__ne__)
     3895    0.005    0.000    0.040    0.000 entity.py:109(__new__)
    11590    0.006    0.000    0.014    0.000 entity.py:112(is_seq_and_not_point)
     3895    0.008    0.000    0.032    0.000 entity.py:118(<listcomp>)
      190    0.000    0.000    0.001    0.000 entity.py:143(_eval_subs)
       16    0.000    0.000    0.000    0.000 enum.py:281(__call__)
       16    0.000    0.000    0.000    0.000 enum.py:537(__new__)
        8    0.000    0.000    0.000    0.000 enum.py:827(__and__)
     4940    0.009    0.000    0.071    0.000 euclidtools.py:1152(dup_zz_heu_gcd)
     4940    0.008    0.000    0.085    0.000 euclidtools.py:1480(dup_inner_gcd)
     4940    0.002    0.000    0.088    0.000 euclidtools.py:1567(dmp_inner_gcd)
     4940    0.010    0.000    0.105    0.000 euclidtools.py:1850(dmp_cancel)
     4940    0.001    0.000    0.001    0.000 euclidtools.py:867(_dup_rr_trivial_gcd)
      285    0.000    0.000    0.000    0.000 evalf.py:1242(<lambda>)
      784    0.001    0.000    0.010    0.000 evalf.py:1243(<lambda>)
     1885    0.001    0.000    0.005    0.000 evalf.py:1244(<lambda>)
      962    0.000    0.000    0.000    0.000 evalf.py:1245(<lambda>)
     1141    0.001    0.000    0.001    0.000 evalf.py:1246(<lambda>)
        1    0.000    0.000    0.000    0.000 evalf.py:1247(<lambda>)
        1    0.000    0.000    0.000    0.000 evalf.py:1251(<lambda>)
     5059    0.013    0.000    0.041    0.000 evalf.py:1282(evalf)
     5059    0.023    0.000    0.110    0.000 evalf.py:1338(evalf)
      285    0.000    0.000    0.002    0.000 evalf.py:1431(_to_mpmath)
      285    0.000    0.000    0.001    0.000 evalf.py:275(chop_parts)
        6    0.000    0.000    0.000    0.000 evalf.py:34(bitcount)
      285    0.000    0.000    0.000    0.000 evalf.py:79(fastlog)
        4    0.000    0.000    0.000    0.000 expr.py:1077(args_cnc)
    21929    0.034    0.000    0.248    0.000 expr.py:110(__neg__)
     2312    0.007    0.000    0.150    0.000 expr.py:117(__add__)
      570    0.001    0.000    0.009    0.000 expr.py:122(__radd__)
     3498    0.009    0.000    0.102    0.000 expr.py:127(__sub__)
57994/56284    0.080    0.000    0.620    0.000 expr.py:137(__mul__)
       26    0.000    0.000    0.004    0.000 expr.py:142(__rmul__)
      380    0.000    0.000    0.029    0.000 expr.py:1437(as_coefficient)
    97/76    0.000    0.000    0.024    0.000 expr.py:147(__pow__)
38216/38209    0.097    0.000    0.580    0.000 expr.py:157(__div__)
    38950    0.080    0.000    0.171    0.000 expr.py:162(__rdiv__)
     4382    0.022    0.000    0.234    0.000 expr.py:1693(as_real_imag)
    63893    0.014    0.000    0.014    0.000 expr.py:1759(as_base_exp)
    18050    0.004    0.000    0.004    0.000 expr.py:1860(as_content_primitive)
    16340    0.003    0.000    0.003    0.000 expr.py:1917(as_numer_denom)
     3800    0.009    0.000    0.112    0.000 expr.py:1930(normal)
34580/12920    0.184    0.000    1.375    0.000 expr.py:1943(extract_multiplicatively)
6270/5130    0.018    0.000    1.570    0.000 expr.py:2176(could_extract_minus_sign)
      570    0.001    0.000    0.148    0.000 expr.py:2200(<listcomp>)
     3420    0.011    0.000    0.233    0.000 expr.py:241(__complex__)
      190    0.003    0.000    0.035    0.000 expr.py:246(__ge__)
    14872    0.004    0.000    0.004    0.000 expr.py:2912(as_coeff_Mul)
  950/190    0.004    0.000    0.038    0.000 expr.py:2946(diff)
141619/35219    0.210    0.000    0.478    0.000 expr.py:2962(_expand_hint)
    10098    0.105    0.000    0.659    0.000 expr.py:2992(expand)
    63058    0.008    0.000    0.008    0.000 expr.py:3035(_expand_hint_key)
      190    0.002    0.000    0.005    0.000 expr.py:312(__lt__)
     2470    0.008    0.000    1.581    0.001 expr.py:3158(cancel)
      190    0.000    0.000    0.001    0.000 expr.py:3285(_eval_derivative)
      380    0.001    0.000    0.001    0.000 expr.py:3362(_n2)
      760    0.000    0.000    0.000    0.000 expr.py:3366(<genexpr>)
6012/3837    0.007    0.000    0.014    0.000 expr.py:347(is_number)
18228/11703    0.003    0.000    0.007    0.000 expr.py:371(<genexpr>)
      190    0.002    0.000    0.564    0.003 expr.py:451(is_constant)
  570/380    0.005    0.000    2.764    0.007 expr.py:606(equals)
3230/1710    0.015    0.000    0.422    0.000 expr.py:62(sort_key)
     1235    0.003    0.000    0.006    0.000 expr.py:714(_eval_is_positive)
     1627    0.006    0.000    0.127    0.000 expr.py:744(_eval_is_negative)
     1710    0.002    0.000    0.059    0.000 expr.py:85(<listcomp>)
     1710    0.006    0.000    0.011    0.000 expr.py:888(_parse_order)
     3420    0.003    0.000    0.004    0.000 expr.py:903(neg)
     3420    0.007    0.000    0.012    0.000 expr.py:914(key)
     3420    0.001    0.000    0.001    0.000 expr.py:918(<listcomp>)
     1710    0.006    0.000    0.353    0.000 expr.py:929(as_ordered_terms)
     5130    0.001    0.000    0.001    0.000 expr.py:946(<genexpr>)
     1710    0.001    0.000    0.001    0.000 expr.py:963(<listcomp>)
     1710    0.032    0.000    0.317    0.000 expr.py:965(as_terms)
     8170    0.017    0.000    0.021    0.000 exprtools.py:1028(mask)
     8170    0.005    0.000    0.005    0.000 exprtools.py:1031(<listcomp>)
     2280    0.001    0.000    0.003    0.000 exprtools.py:1063(<genexpr>)
    10260    0.014    0.000    2.451    0.000 exprtools.py:1093(factor_terms)
21280/10260    0.119    0.000    2.429    0.000 exprtools.py:1146(do)
     5510    0.007    0.000    0.184    0.000 exprtools.py:1169(<listcomp>)
    11970    0.008    0.000    0.051    0.000 exprtools.py:1171(<genexpr>)
    14820    0.013    0.000    0.016    0.000 exprtools.py:206(decompose_power)
   144020    0.303    0.000    0.906    0.000 exprtools.py:284(__init__)
      380    0.000    0.000    0.000    0.000 exprtools.py:31(_monotonic_sign)
    76000    0.027    0.000    0.036    0.000 exprtools.py:402(is_zero)
    51870    0.050    0.000    0.057    0.000 exprtools.py:421(as_expr)
    38000    0.067    0.000    0.459    0.000 exprtools.py:449(mul)
   114000    0.028    0.000    0.064    0.000 exprtools.py:466(<genexpr>)
    16340    0.041    0.000    0.260    0.000 exprtools.py:482(normal)
     5320    0.008    0.000    0.033    0.000 exprtools.py:552(div)
     5320    0.003    0.000    0.036    0.000 exprtools.py:654(quo)
    16340    0.019    0.000    0.068    0.000 exprtools.py:714(gcd)
     2660    0.003    0.000    0.010    0.000 exprtools.py:747(lcm)
    62700    0.098    0.000    0.436    0.000 exprtools.py:808(__init__)
    19190    0.030    0.000    0.258    0.000 exprtools.py:850(as_expr)
    16340    0.044    0.000    0.727    0.000 exprtools.py:853(mul)
    16340    0.021    0.000    0.163    0.000 exprtools.py:862(inv)
    16340    0.012    0.000    0.903    0.000 exprtools.py:865(quo)
     8170    0.017    0.000    0.189    0.000 exprtools.py:876(gcd)
     8170    0.101    0.000    2.129    0.000 exprtools.py:915(_gcd_terms)
     8170    0.003    0.000    0.003    0.000 exprtools.py:929(<listcomp>)
     5510    0.005    0.000    0.172    0.000 exprtools.py:961(<listcomp>)
     8170    0.051    0.000    2.425    0.000 exprtools.py:975(gcd_terms)
       56    0.000    0.000    0.001    0.000 factor_.py:1190(factorrat)
        9    0.000    0.000    0.000    0.000 factor_.py:1254(primefactors)
        9    0.000    0.000    0.000    0.000 factor_.py:1288(<listcomp>)
       17    0.000    0.000    0.000    0.000 factor_.py:155(trailing)
       14    0.000    0.000    0.000    0.000 factor_.py:193(multiplicity)
    65/56    0.000    0.000    0.002    0.000 factor_.py:264(perfect_power)
       10    0.000    0.000    0.000    0.000 factor_.py:704(_factorint_small)
       10    0.000    0.000    0.000    0.000 factor_.py:718(done)
      121    0.000    0.000    0.000    0.000 factor_.py:805(factorint)
    67471    0.019    0.000    0.019    0.000 facts.py:486(_tell)
     6245    0.039    0.000    0.070    0.000 facts.py:503(deduce_all_facts)
    42213    0.008    0.000    0.011    0.000 facts.py:537(<genexpr>)
        2    0.000    0.000    0.000    0.000 fancysets.py:86(_contains)
      272    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
      272    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
      272    0.003    0.000    0.005    0.000 fractions.py:84(__new__)
      285    0.000    0.000    0.001    0.000 fromnumeric.py:185(reshape)
      285    0.000    0.000    0.000    0.000 fromnumeric.py:2688(size)
      285    0.000    0.000    0.001    0.000 fromnumeric.py:49(_wrapfunc)
  950/190    0.010    0.000    0.037    0.000 function.py:1059(__new__)
     1900    0.001    0.000    0.001    0.000 function.py:1134(<genexpr>)
     1900    0.000    0.000    0.000    0.000 function.py:1135(<genexpr>)
     1140    0.001    0.000    0.001    0.000 function.py:1142(<genexpr>)
      190    0.001    0.000    0.012    0.000 function.py:1510(__new__)
     2693    0.005    0.000    0.106    0.000 function.py:181(nargs)
     2470    0.005    0.000    0.310    0.000 function.py:2171(_mexpand)
     5130    0.020    0.000    0.194    0.000 function.py:2188(expand_mul)
     2470    0.013    0.000    0.102    0.000 function.py:2206(expand_multinomial)
     2880    0.013    0.000    0.206    0.000 function.py:235(__new__)
     2470    0.012    0.000    0.080    0.000 function.py:2367(expand_power_exp)
     5588    0.098    0.000    0.364    0.000 function.py:2385(count_ops)
    15512    0.007    0.000    0.008    0.000 function.py:2585(<genexpr>)
        2    0.000    0.000    0.000    0.000 function.py:278(eval)
2693/2691    0.016    0.000    0.388    0.000 function.py:404(__new__)
      764    0.000    0.000    0.001    0.000 function.py:431(<genexpr>)
      764    0.000    0.000    0.001    0.000 function.py:432(<genexpr>)
      764    0.001    0.000    0.001    0.000 function.py:437(_should_evalf)
    16200    0.011    0.000    0.049    0.000 function.py:63(_coeff_isneg)
      570    0.000    0.000    0.011    0.000 functions.py:293(log)
       70    0.000    0.000    0.001    0.000 generate.py:111(primerange)
       29    0.000    0.000    0.000    0.000 generate.py:140(search)
        2    0.000    0.000    0.000    0.000 generate.py:184(__getitem__)
       41    0.000    0.000    0.000    0.000 generate.py:374(nextprime)
       89    0.000    0.000    0.001    0.000 generate.py:493(primerange)
       27    0.000    0.000    0.000    0.000 generate.py:53(extend)
        2    0.000    0.000    0.000    0.000 generate.py:90(extend_to_no)
        1    0.000    0.000    0.000    0.000 getlimits.py:100(_str_xmax)
        1    0.000    0.000    0.000    0.000 getlimits.py:104(_str_resolution)
        5    0.000    0.000    0.000    0.000 getlimits.py:18(_fr0)
        1    0.000    0.000    0.000    0.000 getlimits.py:251(_get_machar)
      285    0.001    0.000    0.001    0.000 getlimits.py:376(__new__)
        1    0.000    0.000    0.000    0.000 getlimits.py:409(_init)
        5    0.000    0.000    0.000    0.000 getlimits.py:71(<lambda>)
        1    0.000    0.000    0.000    0.000 getlimits.py:88(_str_eps)
        1    0.000    0.000    0.000    0.000 getlimits.py:92(_str_epsneg)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(_str_xmin)
     2470    0.010    0.000    1.422    0.001 hyperexpand.py:2434(hyperexpand)
   464349    0.137    0.000    0.137    0.000 identification.py:10(round_fixed)
     6826    0.014    0.000    0.055    0.000 identification.py:164(<listcomp>)
    24571    0.005    0.000    0.006    0.000 identification.py:167(<genexpr>)
     6826    4.538    0.001    5.619    0.001 identification.py:17(pslq)
     9252    0.020    0.000    0.032    0.000 identification.py:285(<listcomp>)
    54674    0.008    0.000    0.010    0.000 identification.py:287(<genexpr>)
  1621370    0.223    0.000    0.307    0.000 identification.py:296(<genexpr>)
     1088    0.001    0.000    0.004    0.000 identification.py:312(findpoly)
       24    0.000    0.000    0.000    0.000 identification.py:429(fracgcd)
        6    0.000    0.000    0.000    0.000 identification.py:464(prodstring)
       13    0.000    0.000    0.001    0.000 identification.py:487(quadraticstring)
      285    0.000    0.000    0.002    0.000 identification.py:504(<lambda>)
      272    0.000    0.000    0.002    0.000 identification.py:506(<lambda>)
      272    0.000    0.000    0.002    0.000 identification.py:507(<lambda>)
      272    0.000    0.000    0.004    0.000 identification.py:509(<lambda>)
      272    0.001    0.000    0.005    0.000 identification.py:513(<lambda>)
      272    0.000    0.000    0.006    0.000 identification.py:515(<lambda>)
      272    0.000    0.000    0.006    0.000 identification.py:519(<lambda>)
      272    0.000    0.000    0.006    0.000 identification.py:521(<lambda>)
      272    0.000    0.000    0.007    0.000 identification.py:524(<lambda>)
      272    0.000    0.000    0.008    0.000 identification.py:525(<lambda>)
      272    0.000    0.000    0.009    0.000 identification.py:527(<lambda>)
      272    0.000    0.000    0.007    0.000 identification.py:530(<lambda>)
      285    0.035    0.000    5.825    0.020 identification.py:533(identify)
       19    0.000    0.000    0.000    0.000 identification.py:748(addsolution)
      285    0.000    0.000    0.000    0.000 identification.py:783(<listcomp>)
     3277    0.001    0.000    0.001    0.000 identification.py:796(<listcomp>)
     1360    0.002    0.000    0.023    0.000 identification.py:825(<genexpr>)
      272    0.001    0.000    0.011    0.000 identification.py:827(<listcomp>)
      272    0.000    0.000    0.000    0.000 identification.py:828(<listcomp>)
       36    0.000    0.000    0.000    0.000 identification.py:829(<genexpr>)
     7999    0.002    0.000    0.002    0.000 inspect.py:478(getmro)
       11    0.000    0.000    0.000    0.000 integers.py:20(eval)
    12350    0.017    0.000    0.062    0.000 iterables.py:1675(has_variety)
      380    0.000    0.000    0.001    0.000 iterables.py:1697(uniq)
      816    0.005    0.000    0.005    0.000 libelefun.py:1086(exp_basecase)
      816    0.002    0.000    0.011    0.000 libelefun.py:1151(mpf_exp)
    171/3    0.000    0.000    0.000    0.000 libelefun.py:123(bsp_acot)
        3    0.000    0.000    0.000    0.000 libelefun.py:137(acot_fixed)
        1    0.000    0.000    0.000    0.000 libelefun.py:146(machin)
        1    0.000    0.000    0.000    0.000 libelefun.py:162(ln2_fixed)
      203    0.001    0.000    0.004    0.000 libelefun.py:600(log_taylor)
     3290    0.011    0.000    0.015    0.000 libelefun.py:634(log_taylor_cached)
     4922    0.010    0.000    0.039    0.000 libelefun.py:668(mpf_log)
     4258    0.002    0.000    0.002    0.000 libelefun.py:94(g)
      855    0.001    0.000    0.001    0.000 libintmath.py:123(bin_to_radix)
      855    0.001    0.000    0.001    0.000 libintmath.py:130(small_numeral)
      855    0.001    0.000    0.001    0.000 libintmath.py:141(numeral_python)
      582    0.002    0.000    0.002    0.000 libintmath.py:197(isqrt_small_python)
    86837    0.157    0.000    0.157    0.000 libintmath.py:223(isqrt_fast_python)
      582    0.001    0.000    0.002    0.000 libintmath.py:271(sqrtrem_python)
    85213    0.027    0.000    0.182    0.000 libintmath.py:295(sqrt_fixed)
     3290    0.001    0.000    0.001    0.000 libintmath.py:46(lshift)
    17830    0.006    0.000    0.015    0.000 libintmath.py:83(python_bitcount)
     3821    0.007    0.000    0.012    0.000 libmpf.py:1017(mpf_pow_int)
      855    0.004    0.000    0.008    0.000 libmpf.py:1128(to_digits_exp)
      855    0.004    0.000    0.012    0.000 libmpf.py:1180(to_str)
      285    0.001    0.000    0.002    0.000 libmpf.py:1262(str_to_man_exp)
     1710    0.002    0.000    0.007    0.000 libmpf.py:1285(from_str)
      570    0.002    0.000    0.006    0.000 libmpf.py:1339(mpf_sqrt)
    40686    0.023    0.000    0.023    0.000 libmpf.py:153(_normalize)
    17035    0.014    0.000    0.014    0.000 libmpf.py:208(_normalize1)
    20480    0.025    0.000    0.047    0.000 libmpf.py:291(from_man_exp)
    19893    0.009    0.000    0.039    0.000 libmpf.py:330(from_int)
      855    0.001    0.000    0.001    0.000 libmpf.py:345(to_int)
      285    0.001    0.000    0.002    0.000 libmpf.py:410(from_float)
     7695    0.004    0.000    0.007    0.000 libmpf.py:429(to_float)
     2139    0.003    0.000    0.026    0.000 libmpf.py:466(from_rational)
    25426    0.008    0.000    0.008    0.000 libmpf.py:484(to_fixed)
    10572    0.004    0.000    0.004    0.000 libmpf.py:512(mpf_eq)
     7814    0.005    0.000    0.005    0.000 libmpf.py:549(mpf_cmp)
     1140    0.001    0.000    0.002    0.000 libmpf.py:59(prec_to_dps)
     4252    0.003    0.000    0.006    0.000 libmpf.py:601(mpf_lt)
     3562    0.002    0.000    0.005    0.000 libmpf.py:611(mpf_gt)
      570    0.000    0.000    0.000    0.000 libmpf.py:628(mpf_pos)
      285    0.000    0.000    0.000    0.000 libmpf.py:638(mpf_neg)
     7054    0.008    0.000    0.015    0.000 libmpf.py:64(dps_to_prec)
     6580    0.003    0.000    0.004    0.000 libmpf.py:652(mpf_abs)
     1247    0.001    0.000    0.001    0.000 libmpf.py:667(mpf_sign)
       52    0.000    0.000    0.000    0.000 libmpf.py:677(mpf_add)
       39    0.000    0.000    0.000    0.000 libmpf.py:772(mpf_sub)
     1373    0.002    0.000    0.003    0.000 libmpf.py:859(python_mpf_mul)
     5727    0.011    0.000    0.023    0.000 libmpf.py:925(mpf_div)
       95    0.000    0.000    0.000    0.000 linalg.py:113(isComplexType)
       95    0.001    0.000    0.002    0.000 linalg.py:2203(norm)
       95    0.000    0.000    0.000    0.000 line.py:1330(source)
      380    0.003    0.000   11.631    0.031 line.py:159(arbitrary_point)
      380    0.000    0.000    0.000    0.000 line.py:203(<genexpr>)
       95    0.000    0.000    0.002    0.000 line.py:2183(direction_ratio)
      950    0.001    0.000    0.001    0.000 line.py:589(p1)
      475    0.000    0.000    0.000    0.000 line.py:610(p2)
       95    0.000    0.000    0.000    0.000 line.py:780(points)
    17482    0.026    0.000    0.048    0.000 logic.py:112(fuzzy_and)
4729/4716    0.004    0.000    0.023    0.000 logic.py:40(_fuzzy_group)
    70207    0.020    0.000    0.020    0.000 logic.py:89(fuzzy_bool)
    14820    0.028    0.000    0.147    0.000 miscellaneous.py:168(root)
       13    0.000    0.000    0.007    0.001 miscellaneous.py:50(sqrt)
11452/11400    0.051    0.000    0.090    0.000 mul.py:1033(as_numer_denom)
11452/11400    0.011    0.000    0.020    0.000 mul.py:1037(<listcomp>)
     5510    0.023    0.000    0.040    0.000 mul.py:1040(as_base_exp)
      622    0.001    0.000    0.003    0.000 mul.py:1064(<lambda>)
     2074    0.001    0.000    0.002    0.000 mul.py:1065(<genexpr>)
      596    0.001    0.000    0.002    0.000 mul.py:1066(<lambda>)
     1978    0.000    0.000    0.001    0.000 mul.py:1067(<genexpr>)
      596    0.001    0.000    0.003    0.000 mul.py:1068(<lambda>)
     1978    0.002    0.000    0.002    0.000 mul.py:1069(<genexpr>)
      596    0.001    0.000    0.004    0.000 mul.py:1071(_eval_is_infinite)
     1978    0.001    0.000    0.003    0.000 mul.py:1072(<genexpr>)
      596    0.001    0.000    0.010    0.000 mul.py:1079(_eval_is_rational)
     1978    0.001    0.000    0.008    0.000 mul.py:1080(<genexpr>)
      596    0.001    0.000    0.008    0.000 mul.py:1086(_eval_is_algebraic)
     1978    0.001    0.000    0.006    0.000 mul.py:1087(<genexpr>)
  617/558    0.002    0.000    0.046    0.000 mul.py:1093(_eval_is_zero)
      596    0.001    0.000    0.142    0.000 mul.py:1110(_eval_is_integer)
      596    0.000    0.000    0.015    0.000 mul.py:1127(_eval_is_real)
      596    0.002    0.000    0.014    0.000 mul.py:1130(_eval_real_imag)
      596    0.000    0.000    0.070    0.000 mul.py:1172(_eval_is_imaginary)
      596    0.000    0.000    0.011    0.000 mul.py:1179(_eval_is_hermitian)
      596    0.002    0.000    0.011    0.000 mul.py:1182(_eval_herm_antiherm)
      596    0.000    0.000    0.000    0.000 mul.py:1215(_eval_is_antihermitian)
      596    0.001    0.000    0.007    0.000 mul.py:1222(_eval_is_irrational)
      596    0.000    0.000    0.007    0.000 mul.py:1235(_eval_is_positive)
     1192    0.003    0.000    0.013    0.000 mul.py:1250(_eval_pos_neg)
      596    0.001    0.000    0.011    0.000 mul.py:1282(_eval_is_negative)
      596    0.000    0.000    0.047    0.000 mul.py:1287(_eval_is_odd)
      596    0.000    0.000    0.047    0.000 mul.py:1311(_eval_is_even)
      596    0.001    0.000    0.048    0.000 mul.py:1320(_eval_is_prime)
     4232    0.012    0.000    0.025    0.000 mul.py:1352(_eval_subs)
18240/18050    0.090    0.000    0.205    0.000 mul.py:1642(as_content_primitive)
    66099    0.043    0.000    0.438    0.000 mul.py:1716(_keep_coeff)
     6059    0.004    0.000    0.172    0.000 mul.py:193(<listcomp>)
    15778    0.008    0.000    0.042    0.000 mul.py:31(_mulsort)
      190    0.001    0.000    0.004    0.000 mul.py:36(_unevaluated_Mul)
    31546    0.100    0.000    0.187    0.000 mul.py:376(_gather)
    15260    0.010    0.000    0.040    0.000 mul.py:387(<listcomp>)
    15773    0.003    0.000    0.003    0.000 mul.py:459(<listcomp>)
    15773    0.002    0.000    0.002    0.000 mul.py:557(<listcomp>)
      194    0.000    0.000    0.000    0.000 mul.py:591(<genexpr>)
        4    0.000    0.000    0.018    0.005 mul.py:620(_eval_power)
        4    0.000    0.000    0.000    0.000 mul.py:626(<listcomp>)
     1533    0.002    0.000    0.002    0.000 mul.py:739(as_coeff_mul)
    40683    0.048    0.000    0.061    0.000 mul.py:759(as_coeff_Mul)
     9880    0.027    0.000    0.134    0.000 mul.py:845(_eval_expand_mul)
      190    0.002    0.000    0.015    0.000 mul.py:886(_eval_derivative)
21832/19918    0.302    0.000    0.994    0.000 mul.py:96(flatten)
     5059    0.008    0.000    0.029    0.000 numbers.py:1068(_new)
     6092    0.002    0.000    0.002    0.000 numbers.py:1089(_hashable_content)
     3705    0.003    0.000    0.013    0.000 numbers.py:1104(_as_mpf_val)
      855    0.000    0.000    0.000    0.000 numbers.py:1143(__nonzero__)
      285    0.000    0.000    0.002    0.000 numbers.py:1148(__neg__)
      285    0.001    0.000    0.005    0.000 numbers.py:1172(__div__)
      570    0.001    0.000    0.001    0.000 numbers.py:1242(__int__)
    13024    0.022    0.000    0.073    0.000 numbers.py:1249(__eq__)
     1140    0.001    0.000    0.014    0.000 numbers.py:1278(__ne__)
      285    0.001    0.000    0.012    0.000 numbers.py:1281(__gt__)
      677    0.003    0.000    0.019    0.000 numbers.py:1309(__lt__)
    26487    0.016    0.000    0.046    0.000 numbers.py:1337(__hash__)
11157/6184    0.044    0.000    0.103    0.000 numbers.py:1452(__new__)
     1425    0.001    0.000    0.006    0.000 numbers.py:149(_literal_float)
    10052    0.002    0.000    0.002    0.000 numbers.py:1540(_hashable_content)
      402    0.000    0.000    0.000    0.000 numbers.py:1543(_eval_is_positive)
       55    0.000    0.000    0.000    0.000 numbers.py:1546(_eval_is_zero)
     6165    0.010    0.000    0.025    0.000 numbers.py:1549(__neg__)
     2863    0.006    0.000    0.067    0.000 numbers.py:1552(__add__)
      190    0.001    0.000    0.002    0.000 numbers.py:1567(__sub__)
    49287    0.048    0.000    0.537    0.000 numbers.py:1591(__mul__)
   151352    0.274    0.000    0.388    0.000 numbers.py:160(igcd)
    32134    0.081    0.000    0.211    0.000 numbers.py:1605(__div__)
       26    0.000    0.000    0.014    0.001 numbers.py:1653(_eval_power)
     1070    0.001    0.000    0.014    0.000 numbers.py:1695(_as_mpf_val)
      190    0.000    0.000    0.000    0.000 numbers.py:1704(__int__)
    96216    0.082    0.000    0.317    0.000 numbers.py:1718(__eq__)
     4750    0.002    0.000    0.018    0.000 numbers.py:1736(__ne__)
      760    0.002    0.000    0.006    0.000 numbers.py:1775(__lt__)
    82410    0.059    0.000    0.132    0.000 numbers.py:1811(__hash__)
       56    0.000    0.000    0.001    0.000 numbers.py:1814(factors)
     8223    0.027    0.000    0.094    0.000 numbers.py:1826(gcd)
     3430    0.003    0.000    0.008    0.000 numbers.py:1844(as_numer_denom)
    25080    0.016    0.000    0.027    0.000 numbers.py:1851(as_content_primitive)
    72067    0.015    0.000    0.015    0.000 numbers.py:1871(as_coeff_Mul)
     5699    0.004    0.000    0.014    0.000 numbers.py:1949(_as_mpf_val)
   330192    0.182    0.000    0.230    0.000 numbers.py:1956(__new__)
     1313    0.000    0.000    0.000    0.000 numbers.py:1986(__int__)
    12212    0.008    0.000    0.018    0.000 numbers.py:1997(__neg__)
      580    0.002    0.000    0.009    0.000 numbers.py:2006(__divmod__)
     9171    0.019    0.000    0.087    0.000 numbers.py:2028(__add__)
     1330    0.003    0.000    0.012    0.000 numbers.py:2040(__radd__)
      285    0.000    0.000    0.001    0.000 numbers.py:2049(__sub__)
181304/172656    0.206    0.000    0.948    0.000 numbers.py:2069(__mul__)
     4682    0.010    0.000    0.028    0.000 numbers.py:2080(__rmul__)
      580    0.001    0.000    0.001    0.000 numbers.py:2089(__mod__)
   172844    0.106    0.000    0.445    0.000 numbers.py:2107(__eq__)
    39909    0.015    0.000    0.096    0.000 numbers.py:2114(__ne__)
     6270    0.006    0.000    0.037    0.000 numbers.py:2126(__lt__)
  1007249    0.257    0.000    0.341    0.000 numbers.py:2153(__hash__)
        1    0.000    0.000    0.000    0.000 numbers.py:2161(_eval_is_odd)
   122/75    0.001    0.000    0.034    0.000 numbers.py:2164(_eval_power)
    42336    0.010    0.000    0.010    0.000 numbers.py:2284(as_numer_denom)
      760    0.000    0.000    0.000    0.000 numbers.py:2478(__neg__)
    20079    0.003    0.000    0.003    0.000 numbers.py:2502(__nonzero__)
     4751    0.001    0.000    0.001    0.000 numbers.py:2540(__neg__)
        1    0.000    0.000    0.000    0.000 numbers.py:2589(__abs__)
       72    0.000    0.000    0.000    0.000 numbers.py:2593(__neg__)
    33785    0.018    0.000    0.040    0.000 numbers.py:2830(__hash__)
    17480    0.010    0.000    0.021    0.000 numbers.py:3051(__hash__)
      392    0.000    0.000    0.000    0.000 numbers.py:3209(_as_mpf_val)
    17872    0.014    0.000    0.029    0.000 numbers.py:3216(__hash__)
      322    0.000    0.000    0.000    0.000 numbers.py:3219(__eq__)
    54203    0.054    0.000    0.154    0.000 numbers.py:371(ilcm)
        1    0.000    0.000    0.000    0.000 numbers.py:3784(_eval_power)
      392    0.001    0.000    0.007    0.000 numbers.py:590(_eval_evalf)
      285    0.000    0.000    0.001    0.000 numbers.py:593(_as_mpf_op)
     7695    0.007    0.000    0.042    0.000 numbers.py:597(__float__)
     6132    0.006    0.000    0.071    0.000 numbers.py:616(_eval_subs)
      150    0.000    0.000    0.000    0.000 numbers.py:621(_eval_is_finite)
      787    0.000    0.000    0.000    0.000 numbers.py:624(class_key)
      787    0.001    0.000    0.001    0.000 numbers.py:628(sort_key)
     1153    0.001    0.000    0.045    0.000 numbers.py:632(__add__)
    49229    0.037    0.000    0.437    0.000 numbers.py:654(__mul__)
   178034    0.103    0.000    0.151    0.000 numbers.py:726(__hash__)
    13680    0.007    0.000    0.007    0.000 numbers.py:732(as_coeff_mul)
     8764    0.012    0.000    0.026    0.000 numbers.py:78(mpf_norm)
     1710    0.007    0.000    0.025    0.000 numbers.py:941(__new__)
      570    0.001    0.000    0.002    0.000 numeric.py:1468(normalize_axis_tuple)
     1140    0.000    0.000    0.000    0.000 numeric.py:1515(<genexpr>)
      285    0.001    0.000    0.003    0.000 numeric.py:1524(moveaxis)
      285    0.000    0.000    0.000    0.000 numeric.py:1586(<listcomp>)
       95    0.003    0.000    0.007    0.000 numeric.py:1600(cross)
      285    0.000    0.000    0.000    0.000 numeric.py:1927(isscalar)
      570    0.000    0.000    0.001    0.000 numeric.py:433(asarray)
        1    0.000    0.000    0.000    0.000 numerictypes.py:565(obj2sctype)
42962/39831    0.226    0.000    1.977    0.000 operations.py:27(__new__)
    42962    0.024    0.000    0.024    0.000 operations.py:31(<listcomp>)
    65793    0.042    0.000    0.086    0.000 operations.py:352(make_args)
      190    0.001    0.000    0.030    0.000 operations.py:412(__new__)
      380    0.000    0.000    0.000    0.000 operations.py:413(<genexpr>)
      380    0.001    0.000    0.003    0.000 operations.py:429(_new_args_filter)
    57593    0.097    0.000    0.200    0.000 operations.py:50(_from_args)
    52498    0.011    0.000    0.012    0.000 operations.py:60(<genexpr>)
     9859    0.010    0.000    0.025    0.000 operations.py:64(_new_rawargs)
     1710    0.002    0.000    0.004    0.000 orderings.py:199(monomial_key)
     3420    0.001    0.000    0.001    0.000 orderings.py:42(__call__)
      190    0.002    0.000    0.049    0.000 piecewise.py:119(eval)
      190    0.001    0.000    0.003    0.000 piecewise.py:128(<listcomp>)
      760    0.001    0.000    0.014    0.000 piecewise.py:14(__new__)
      950    0.000    0.000    0.001    0.000 piecewise.py:21(expr)
     1330    0.001    0.000    0.001    0.000 piecewise.py:28(cond)
     2280    0.001    0.000    0.002    0.000 piecewise.py:50(__iter__)
      380    0.001    0.000    0.004    0.000 piecewise.py:500(__eval_cond)
     2470    0.009    0.000    0.075    0.000 piecewise.py:522(piecewise_fold)
      190    0.002    0.000    0.065    0.000 piecewise.py:92(__new__)
      570    0.003    0.000    0.527    0.001 plane.py:308(equation)
      570    0.001    0.000    0.001    0.000 plane.py:323(<listcomp>)
     2280    0.002    0.000    0.230    0.000 plane.py:327(<genexpr>)
      190    0.004    0.000   16.786    0.088 plane.py:329(intersection)
      570    0.000    0.000    0.000    0.000 plane.py:515(normal_vector)
       95    0.001    0.000    6.274    0.066 plane.py:52(__new__)
      570    0.000    0.000    0.000    0.000 plane.py:533(p1)
      380    0.005    0.000    9.460    0.025 plane.py:72(__contains__)
3800/2850    0.008    0.000    6.431    0.002 point.py:1101(__new__)
     3420    0.034    0.000    6.522    0.002 point.py:111(__new__)
      665    0.003    0.000    0.099    0.000 point.py:1173(direction_ratio)
     1520    0.001    0.000    0.001    0.000 point.py:1309(x)
     1520    0.001    0.000    0.001    0.000 point.py:1324(y)
     1520    0.001    0.000    0.001    0.000 point.py:1339(z)
     2470    0.000    0.000    0.000    0.000 point.py:156(<genexpr>)
     9880    0.007    0.000    0.069    0.000 point.py:158(<genexpr>)
     9880    0.003    0.000    0.004    0.000 point.py:160(<genexpr>)
      950    0.001    0.000    6.213    0.007 point.py:170(<listcomp>)
      760    0.005    0.000    7.500    0.010 point.py:189(__add__)
      760    0.004    0.000    7.389    0.010 point.py:225(<listcomp>)
      190    0.000    0.000    0.000    0.000 point.py:237(__eq__)
      285    0.000    0.000    0.001    0.000 point.py:245(__hash__)
     4085    0.003    0.000    0.003    0.000 point.py:248(__iter__)
     8075    0.004    0.000    0.005    0.000 point.py:251(__len__)
      380    0.001    0.000    4.118    0.011 point.py:254(__mul__)
      380    0.002    0.000    4.082    0.011 point.py:282(<listcomp>)
      380    0.001    0.000    0.075    0.000 point.py:290(__sub__)
      380    0.001    0.000    0.001    0.000 point.py:293(<listcomp>)
      760    0.002    0.000    0.010    0.000 point.py:295(_normalize_dimension)
     2280    0.001    0.000    0.003    0.000 point.py:306(<genexpr>)
     2280    0.001    0.000    0.003    0.000 point.py:307(<genexpr>)
     3040    0.001    0.000    0.004    0.000 point.py:333(ambient_dimension)
    19760    0.014    0.000    0.014    0.000 polyclasses.py:150(__init__)
     4940    0.005    0.000    0.018    0.000 polyclasses.py:167(__hash__)
     4940    0.006    0.000    0.008    0.000 polyclasses.py:170(unify)
     9880    0.008    0.000    0.014    0.000 polyclasses.py:200(per)
     9880    0.017    0.000    0.054    0.000 polyclasses.py:240(to_sympy_dict)
     4940    0.004    0.000    0.006    0.000 polyclasses.py:249(to_tuple)
     9880    0.010    0.000    0.061    0.000 polyclasses.py:257(from_dict)
     9880    0.004    0.000    0.008    0.000 polyclasses.py:278(convert)
     4940    0.011    0.000    0.137    0.000 polyclasses.py:673(cancel)
     4940    0.004    0.000    0.007    0.000 polyconfig.py:48(query)
     4940    0.065    0.000    0.089    0.000 polyoptions.py:127(__init__)
     9880    0.005    0.000    0.006    0.000 polyoptions.py:139(preprocess_options)
     4940    0.007    0.000    0.010    0.000 polyoptions.py:204(clone)
     9880    0.004    0.000    0.004    0.000 polyoptions.py:216(__setattr__)
    14820    0.002    0.000    0.002    0.000 polyoptions.py:264(default)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:277(default)
    39520    0.004    0.000    0.004    0.000 polyoptions.py:30(default)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:333(default)
    93860    0.007    0.000    0.007    0.000 polyoptions.py:38(postprocess)
     4940    0.002    0.000    0.002    0.000 polyoptions.py:485(postprocess)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:505(postprocess)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:520(postprocess)
     4940    0.002    0.000    0.002    0.000 polyoptions.py:553(postprocess)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:578(postprocess)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:616(postprocess)
    98800    0.063    0.000    0.071    0.000 polyoptions.py:64(getter)
     4940    0.001    0.000    0.001    0.000 polyoptions.py:690(default)
    14820    0.014    0.000    0.105    0.000 polyoptions.py:725(build_options)
     4940    0.006    0.000    0.006    0.000 polyoptions.py:736(allowed_flags)
    19760    0.024    0.000    0.047    0.000 polytools.py:131(new)
     9880    0.033    0.000    0.142    0.000 polytools.py:171(_from_dict)
     4940    0.001    0.000    0.001    0.000 polytools.py:242(_hashable_content)
     4940    0.005    0.000    0.037    0.000 polytools.py:246(__hash__)
     4940    0.023    0.000    0.336    0.000 polytools.py:3626(cancel)
     4940    0.022    0.000    0.092    0.000 polytools.py:387(_unify)
     4940    0.010    0.000    1.621    0.000 polytools.py:4262(parallel_poly_from_expr)
     4940    0.123    0.000    1.513    0.000 polytools.py:4269(_parallel_poly_from_expr)
     9880    0.007    0.000    0.028    0.000 polytools.py:427(per)
     4940    0.051    0.000    3.601    0.001 polytools.py:6397(cancel)
     9880    0.014    0.000    0.137    0.000 polytools.py:970(as_expr)
     4940    0.004    0.000    0.004    0.000 polyutils.py:113(_unify_gens)
    17480    0.028    0.000    0.411    0.000 polyutils.py:173(_not_a_coeff)
     4940    0.100    0.000    0.723    0.000 polyutils.py:228(_parallel_dict_from_expr_no_gens)
     4940    0.001    0.000    0.001    0.000 polyutils.py:237(_is_coeff)
     4940    0.019    0.000    0.777    0.000 polyutils.py:320(_parallel_dict_from_expr)
     4940    0.007    0.000    0.010    0.000 polyutils.py:323(<listcomp>)
    14820    0.003    0.000    0.003    0.000 polyutils.py:325(<genexpr>)
     9880    0.044    0.000    0.070    0.000 polyutils.py:372(expr_from_dict)
     4940    0.014    0.000    0.134    0.000 polyutils.py:65(_sort_gens)
     4940    0.019    0.000    0.099    0.000 polyutils.py:77(order_key)
2535/2404    0.006    0.000    0.065    0.000 power.py:187(__new__)
       61    0.000    0.000    0.000    0.000 power.py:237(base)
       78    0.000    0.000    0.000    0.000 power.py:241(exp)
        7    0.000    0.000    0.016    0.002 power.py:258(_eval_power)
       72    0.000    0.000    0.000    0.000 power.py:30(integer_nthroot)
       21    0.000    0.000    0.000    0.000 power.py:390(_eval_is_zero)
       19    0.000    0.000    0.000    0.000 power.py:531(_eval_is_finite)
      103    0.000    0.000    0.000    0.000 power.py:634(as_base_exp)
47880/21660    0.099    0.000    1.325    0.000 powsimp.py:104(recurse)
16530/9690    0.018    0.000    1.078    0.000 powsimp.py:118(<listcomp>)
     2470    0.003    0.000    0.030    0.000 powsimp.py:143(<listcomp>)
55290/7410    0.575    0.000    2.096    0.000 powsimp.py:17(powsimp)
     7410    0.004    0.000    0.004    0.000 powsimp.py:214(<listcomp>)
    14820    0.005    0.000    0.005    0.000 powsimp.py:227(bkey)
     7410    0.003    0.000    0.003    0.000 powsimp.py:285(<listcomp>)
     7410    0.014    0.000    0.021    0.000 powsimp.py:367(<listcomp>)
    24700    0.010    0.000    0.021    0.000 powsimp.py:390(<genexpr>)
     4940    0.009    0.000    0.020    0.000 powsimp.py:477(<listcomp>)
        9    0.000    0.000    0.000    0.000 primetest.py:426(isprime)
     6555    0.019    0.000    0.026    0.000 printer.py:196(__init__)
     6555    0.006    0.000    0.050    0.000 printer.py:231(doprint)
     6555    0.020    0.000    0.044    0.000 printer.py:235(_print)
    22420    0.012    0.000    0.029    0.000 pythonintegerring.py:26(to_sympy)
    12540    0.004    0.000    0.004    0.000 pythonintegerring.py:30(from_sympy)
    19760    0.005    0.000    0.008    0.000 pythonintegerring.py:76(gcd)
    16634    0.091    0.000    0.158    0.000 radsimp.py:900(fraction)
      950    0.001    0.000    0.010    0.000 radsimp.py:997(denom)
   253923    0.123    0.000    0.180    0.000 random.py:224(_randbelow)
    22412    0.090    0.000    0.272    0.000 random.py:264(shuffle)
     4940    0.006    0.000    0.954    0.000 rationaltools.py:10(together)
20140/4940    0.026    0.000    0.944    0.000 rationaltools.py:63(_together)
     4940    0.004    0.000    0.008    0.000 rationaltools.py:79(<listcomp>)
     1425    0.001    0.000    0.004    0.000 re.py:170(match)
        7    0.000    0.000    0.008    0.001 re.py:232(compile)
     1432    0.001    0.000    0.009    0.000 re.py:271(_compile)
     2691    0.012    0.000    0.032    0.000 relational.py:286(__new__)
 1140/760    0.002    0.000    0.049    0.000 relational.py:434(__new__)
      760    0.001    0.000    0.002    0.000 relational.py:52(__new__)
      760    0.000    0.000    0.000    0.000 relational.py:64(lhs)
      380    0.000    0.000    0.000    0.000 relational.py:69(rhs)
      190    0.000    0.000    0.036    0.000 relational.py:739(_eval_relation)
      380    0.001    0.000    0.004    0.000 relational.py:74(reversed)
      190    0.000    0.000    0.006    0.000 relational.py:781(_eval_relation)
      380    0.002    0.000    0.006    0.000 relational.py:99(canonical)
     4940    0.001    0.000    0.001    0.000 ring.py:16(get_ring)
     2470    0.002    0.000    0.002    0.000 rules.py:50(__init__)
    10070    0.005    0.000    0.010    0.000 rules.py:54(__contains__)
     3261    0.020    0.000    0.114    0.000 sets.py:1885(__new__)
     2691    0.007    0.000    0.045    0.000 sets.py:1984(_contains)
2693/2691    0.004    0.000    0.058    0.000 sets.py:290(contains)
     3261    0.035    0.000    0.035    0.000 sets.py:52(_infimum_key)
2693/2691    0.004    0.000    0.065    0.000 sets.py:578(__contains__)
  570/285    0.006    0.000    6.211    0.022 simplify.py:1160(nsimplify)
      285    0.000    0.000    0.001    0.000 simplify.py:1228(<listcomp>)
      285    0.003    0.000    5.896    0.021 simplify.py:1250(nsimplify_real)
      285    0.007    0.000    6.182    0.022 simplify.py:1295(_real_to_rational)
5130/2470    0.019    0.000    1.788    0.001 simplify.py:323(signsimp)
     1330    0.002    0.000    0.094    0.000 simplify.py:379(<listcomp>)
     2470    0.004    0.000    0.177    0.000 simplify.py:381(<dictcomp>)
     4275    0.124    0.000   13.421    0.003 simplify.py:385(simplify)
    12350    0.008    0.000    0.142    0.000 simplify.py:537(shorter)
     3800    0.003    0.000    0.114    0.000 simplify.py:544(<lambda>)
    10070    0.005    0.000    0.006    0.000 simplify.py:591(<lambda>)
31160/7600    0.040    0.000    0.203    0.000 simplify.py:988(bottom_up)
11780/7600    0.016    0.000    0.078    0.000 simplify.py:995(<listcomp>)
        3    0.000    0.000    0.000    0.000 singleton.py:167(__call__)
        1    0.000    0.000    0.000    0.000 singleton.py:99(__getattr__)
      190    0.000    0.000    0.000    0.000 solvers.py:1036(<listcomp>)
      190    0.000    0.000    0.003    0.000 solvers.py:1037(<listcomp>)
      190    0.000    0.000    0.000    0.000 solvers.py:1039(<listcomp>)
  950/190    0.001    0.000    0.002    0.000 solvers.py:1053(_has_piecewise)
  950/190    0.000    0.000    0.001    0.000 solvers.py:1056(<listcomp>)
      190    0.001    0.000    0.186    0.001 solvers.py:1252(_solve)
      380    0.000    0.000    0.000    0.000 solvers.py:127(<genexpr>)
      190    0.004    0.000    0.184    0.001 solvers.py:1857(solve_linear)
      190    0.000    0.000    0.000    0.000 solvers.py:1980(<listcomp>)
      190    0.000    0.000    0.000    0.000 solvers.py:2011(<dictcomp>)
      190    0.000    0.000    0.000    0.000 solvers.py:2025(<genexpr>)
      190    0.000    0.000    0.000    0.000 solvers.py:2028(<listcomp>)
      190    0.000    0.000    0.001    0.000 solvers.py:312(check_assumptions)
      190    0.013    0.000    0.745    0.004 solvers.py:367(solve)
      190    0.000    0.000    0.017    0.000 solvers.py:65(_simple_dens)
      190    0.002    0.000    0.016    0.000 solvers.py:80(denoms)
      380    0.001    0.000    0.002    0.000 solvers.py:823(_sympified_list)
      570    0.000    0.000    0.002    0.000 solvers.py:833(<genexpr>)
      950    0.000    0.000    0.001    0.000 solvers.py:851(<lambda>)
      380    0.000    0.000    0.012    0.000 solvers.py:862(<genexpr>)
      190    0.000    0.000    0.000    0.000 solvers.py:897(<listcomp>)
      190    0.000    0.000    0.000    0.000 solvers.py:916(<listcomp>)
      190    0.000    0.000    0.000    0.000 solvers.py:918(<listcomp>)
      380    0.002    0.000    0.228    0.001 solvers.py:929(<genexpr>)
      136    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
      136    0.000    0.000    0.001    0.000 sre_compile.py:276(_optimize_charset)
       19    0.000    0.000    0.000    0.000 sre_compile.py:411(_mk_bitmap)
       19    0.000    0.000    0.000    0.000 sre_compile.py:413(<listcomp>)
      140    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
       16    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
        8    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
        8    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
        8    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
       16    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
        8    0.000    0.000    0.003    0.000 sre_compile.py:598(_code)
       45    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
    293/8    0.001    0.000    0.003    0.000 sre_compile.py:71(_compile)
        8    0.000    0.000    0.008    0.001 sre_compile.py:759(compile)
      303    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
      651    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
     1865    0.001    0.000    0.001    0.000 sre_parse.py:164(__getitem__)
      142    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
      365    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
   336/53    0.001    0.000    0.001    0.000 sre_parse.py:174(getwidth)
        8    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
      980    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
      690    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
      804    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
      349    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
       38    0.000    0.000    0.000    0.000 sre_parse.py:295(_class_escape)
      108    0.000    0.000    0.000    0.000 sre_parse.py:343(_escape)
       87    0.000    0.000    0.000    0.000 sre_parse.py:408(_uniq)
     65/8    0.000    0.000    0.005    0.001 sre_parse.py:417(_parse_sub)
    132/8    0.002    0.000    0.005    0.001 sre_parse.py:475(_parse)
        8    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
      106    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
       45    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
        8    0.000    0.000    0.000    0.000 sre_parse.py:903(fix_flags)
        8    0.000    0.000    0.005    0.001 sre_parse.py:919(parse)
       45    0.000    0.000    0.001    0.000 sre_parse.py:96(closegroup)
     5700    0.002    0.000    0.002    0.000 str.py:131(_print_Dummy)
      855    0.002    0.000    0.017    0.000 str.py:571(_print_Float)
     6555    0.010    0.000    0.086    0.000 str.py:772(sstr)
     3615    0.010    0.000    0.038    0.000 symbol.py:104(__new_stage2__)
    30192    0.036    0.000    0.122    0.000 symbol.py:139(_hashable_content)
    30382    0.049    0.000    0.069    0.000 symbol.py:143(assumptions0)
    60764    0.016    0.000    0.016    0.000 symbol.py:145(<genexpr>)
      380    0.001    0.000    0.002    0.000 symbol.py:160(as_real_imag)
     1140    0.001    0.000    0.001    0.000 symbol.py:176(free_symbols)
     3610    0.010    0.000    0.061    0.000 symbol.py:216(__new__)
      760    0.002    0.000    0.013    0.000 symbol.py:237(sort_key)
    30124    0.021    0.000    0.142    0.000 symbol.py:242(_hashable_content)
      950    0.000    0.000    0.000    0.000 symbol.py:43(_diff_wrt)
    31576    0.038    0.000    0.055    0.000 symbol.py:57(_sanitize)
      665    0.000    0.000    0.000    0.000 symbol.py:73(<lambda>)
    27966    0.023    0.000    0.065    0.000 symbol.py:91(__new__)
    12172    0.005    0.000    0.005    0.000 sympify.py:13(__init__)
     2660    0.004    0.000    0.010    0.000 sympify.py:313(<listcomp>)
   368534    0.174    0.000    0.686    0.000 sympify.py:361(_sympify)
756141/747953    0.762    0.000    2.499    0.000 sympify.py:54(sympify)
        1    0.000    0.000    0.008    0.008 sympy_parser.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:111(ParenthesisGroup)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:360(split_symbols_custom)
     5339    0.063    0.000    0.082    0.000 sympy_parser.py:510(auto_symbol)
     5339    0.005    0.000    0.007    0.000 sympy_parser.py:552(lambda_notation)
     5339    0.029    0.000    0.035    0.000 sympy_parser.py:589(factorial_notation)
     5339    0.022    0.000    0.027    0.000 sympy_parser.py:615(convert_xor)
     5339    0.030    0.000    0.041    0.000 sympy_parser.py:630(auto_number)
     5339    0.069    0.000    0.597    0.000 sympy_parser.py:782(stringify_expr)
     5339    0.003    0.000    0.070    0.000 sympy_parser.py:800(eval_expr)
     5339    0.014    0.000    1.245    0.000 sympy_parser.py:812(parse_expr)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:82(AppliedFunction)
        1    0.000    0.000    0.000    0.000 sympy_parser.py:909(EvaluateFalseTransformer)
        1    0.000    0.000    0.000    0.000 sympy_tokenize.py:157(TokenError)
        1    0.000    0.000    0.000    0.000 sympy_tokenize.py:161(StopTokenizing)
        1    0.000    0.000    0.000    0.000 sympy_tokenize.py:198(Untokenizer)
     5339    0.003    0.000    0.003    0.000 sympy_tokenize.py:200(__init__)
     5339    0.008    0.000    0.080    0.000 sympy_tokenize.py:213(untokenize)
     5339    0.062    0.000    0.068    0.000 sympy_tokenize.py:227(compat)
        1    0.000    0.000    0.007    0.007 sympy_tokenize.py:23(<module>)
     5339    0.006    0.000    0.089    0.000 sympy_tokenize.py:265(untokenize)
    75644    0.122    0.000    0.239    0.000 sympy_tokenize.py:289(generate_tokens)
        1    0.000    0.000    0.000    0.000 sympy_tokenize.py:36(<listcomp>)
       19    0.000    0.000    0.000    0.000 sympy_tokenize.py:47(group)
        1    0.000    0.000    0.000    0.000 sympy_tokenize.py:51(any)
        2    0.000    0.000    0.000    0.000 sympy_tokenize.py:55(maybe)
       95    0.003    0.000   23.090    0.243 trident.py:19(get_area_at)
      380    0.000    0.000    0.001    0.000 util.py:26(_symbol)
   152642    0.038    0.000    0.039    0.000 {built-in method __new__ of type object at 0x00007FFB6B88E890}
     6864    0.005    0.000    0.005    0.000 {built-in method _abc._abc_instancecheck}
      6/3    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
    17859    0.009    0.000    0.009    0.000 {built-in method _bisect.bisect_right}
      190    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
    45980    0.040    0.000    0.293    0.000 {built-in method _functools.reduce}
        2    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
       10    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
       10    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
      570    0.000    0.000    0.000    0.000 {built-in method _operator.index}
        8    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        4    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        6    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
  2311391    0.141    0.000    0.151    0.000 {built-in method builtins.abs}
44411/42236    0.026    0.000    0.134    0.000 {built-in method builtins.all}
107951/76406    0.073    0.000    0.949    0.000 {built-in method builtins.any}
    15973    0.002    0.000    0.002    0.000 {built-in method builtins.callable}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.dir}
6049/5469    0.003    0.000    0.012    0.000 {built-in method builtins.divmod}
     5339    0.023    0.000    0.067    0.000 {built-in method builtins.eval}
   5342/1    0.092    0.000   23.092   23.092 {built-in method builtins.exec}
   162920    0.040    0.000    0.057    0.000 {built-in method builtins.getattr}
  2215329    0.617    0.000    0.617    0.000 {built-in method builtins.hasattr}
1071069/1041894    0.117    0.000    0.156    0.000 {built-in method builtins.hash}
  4711951    0.687    0.000    0.694    0.000 {built-in method builtins.isinstance}
      192    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
    56554    0.018    0.000    0.018    0.000 {built-in method builtins.iter}
1413695/1387740    0.106    0.000    0.119    0.000 {built-in method builtins.len}
   169963    0.193    0.000    0.516    0.000 {built-in method builtins.max}
644015/643949    0.114    0.000    0.193    0.000 {built-in method builtins.min}
   333082    0.066    0.000    0.405    0.000 {built-in method builtins.next}
      302    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       95    0.001    0.000    0.001    0.000 {built-in method builtins.print}
    11020    0.002    0.000    0.002    0.000 {built-in method builtins.repr}
     8194    0.006    0.000    0.006    0.000 {built-in method builtins.round}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
64270/61600    0.060    0.000    0.514    0.000 {built-in method builtins.sorted}
     6430    0.007    0.000    0.392    0.000 {built-in method builtins.sum}
        6    0.000    0.000    0.000    0.000 {built-in method from_bytes}
    59325    0.009    0.000    0.009    0.000 {built-in method from_iterable}
        2    0.000    0.000    0.000    0.000 {built-in method marshal.loads}
      285    0.000    0.000    0.000    0.000 {built-in method math.frexp}
    38697    0.009    0.000    0.009    0.000 {built-in method math.gcd}
     4275    0.003    0.000    0.003    0.000 {built-in method math.ldexp}
     1770    0.001    0.000    0.001    0.000 {built-in method math.log}
        6    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        1    0.000    0.000    0.000    0.000 {built-in method nt.listdir}
        7    0.000    0.000    0.000    0.000 {built-in method nt.stat}
      955    0.006    0.000    0.017    0.000 {built-in method numpy.core.multiarray.array}
       95    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.dot}
       95    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
      855    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.normalize_axis_index}
       95    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.promote_types}
    26613    0.004    0.000    0.004    0.000 {method '__contains__' of 'frozenset' objects}
    13023    0.005    0.000    0.007    0.000 {method 'add' of 'set' objects}
  1209122    0.093    0.000    0.093    0.000 {method 'append' of 'list' objects}
   253923    0.015    0.000    0.015    0.000 {method 'bit_length' of 'int' objects}
    43700    0.019    0.000    0.019    0.000 {method 'copy' of 'collections.defaultdict' objects}
   114961    0.016    0.000    0.016    0.000 {method 'copy' of 'dict' objects}
        5    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
      272    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
     1140    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10864    0.004    0.000    0.004    0.000 {method 'endswith' of 'str' objects}
   103627    0.016    0.000    0.016    0.000 {method 'extend' of 'list' objects}
      468    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        6    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
   406697    0.044    0.000    0.045    0.000 {method 'get' of 'dict' objects}
   400259    0.041    0.000    0.041    0.000 {method 'getrandbits' of '_random.Random' objects}
     1360    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
     4940    0.002    0.000    0.002    0.000 {method 'groups' of 're.Match' objects}
     2396    0.003    0.000    0.003    0.000 {method 'index' of 'list' objects}
     4940    0.002    0.000    0.002    0.000 {method 'indices' of 'slice' objects}
    29070    0.009    0.000    0.009    0.000 {method 'insert' of 'list' objects}
      190    0.000    0.000    0.000    0.000 {method 'intersection' of 'set' objects}
   534157    0.052    0.000    0.052    0.000 {method 'items' of 'dict' objects}
     5384    0.003    0.000    0.003    0.000 {method 'join' of 'str' objects}
   230954    0.024    0.000    0.024    0.000 {method 'keys' of 'dict' objects}
      299    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
    71603    0.116    0.000    0.116    0.000 {method 'match' of 're.Pattern' objects}
    59325    0.022    0.000    0.022    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.generic' objects}
        8    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
   117450    0.021    0.000    0.024    0.000 {method 'pop' of 'dict' objects}
    30303    0.009    0.000    0.009    0.000 {method 'pop' of 'list' objects}
      190    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
     5510    0.001    0.000    0.001    0.000 {method 'popitem' of 'dict' objects}
       95    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'read' of '_io.FileIO' objects}
    10678    0.005    0.000    0.005    0.000 {method 'readline' of '_io.StringIO' objects}
     7347    0.004    0.000    0.004    0.000 {method 'replace' of 'str' objects}
      285    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
   289515    0.052    0.000    0.052    0.000 {method 'rpartition' of 'str' objects}
      276    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
      309    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
    36574    0.017    0.000    0.027    0.000 {method 'setdefault' of 'dict' objects}
    48644    0.022    0.000    0.088    0.000 {method 'sort' of 'list' objects}
    64966    0.008    0.000    0.008    0.000 {method 'span' of 're.Match' objects}
      570    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
    11307    0.003    0.000    0.003    0.000 {method 'startswith' of 'str' objects}
     7054    0.002    0.000    0.002    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.generic' objects}
       19    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
      285    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
     8317    0.002    0.000    0.002    0.000 {method 'union' of 'set' objects}
    17318    0.011    0.000    0.011    0.000 {method 'update' of 'dict' objects}
     8420    0.002    0.000    0.002    0.000 {method 'update' of 'set' objects}
    10554    0.002    0.000    0.002    0.000 {method 'upper' of 'str' objects}
   129915    0.011    0.000    0.011    0.000 {method 'values' of 'dict' objects}


